name: Docker Compose CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: cvhgfnk
          POSTGRES_PASSWORD: 54fd71x
          POSTGRES_DB: attendance_db
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U cvhgfnk" --health-timeout=30s --health-retries=3 --health-start-period=10s

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build and run Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d --build
          
      - name: Wait for services to be ready
        run: |
          docker-compose exec db pg_isready -U cvhgfnk
          
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd /path/to/your/project || exit
            git pull origin main || exit
            docker-compose down || exit
            docker-compose up -d --build || exit
            echo "Deployment successful!"
          EOF
